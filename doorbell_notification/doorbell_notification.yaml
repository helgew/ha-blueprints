blueprint:
  name: Doorbell Notification with Camera Snapshot
  domain: automation
  description: |
    ## Doorbell Notification with Camera Snapshot

    A customizable Notification template to use with a doorbell button. This blueprint will create a camera snapshot and send a notification to a mobile device when the doorbell button is pressed.

    ### Required Configuration Options:
      - Frigate Cameras (probably could be any camera entity)
      - Mobile Device (Running HA Companion App)

    ### Features:
      - Easily select the camera entities or mobile device using a drop-down menu.
      - Configure delays, throttle time, and notification messages.

    ## Support
    Go to https://github.com/helgew/ha-blueprints to report bugs, request new features, or get support with your configuration.
    
    ## Acknowledgements
    This blueprint is based on this [discussion][1], specifically the [blueprint first published by aceindy][2]. Thank you for sharing your work!
    
    [1]: https://community.home-assistant.io/t/send-camera-snapshot-when-doorbell-was-activated/123456
    [2]: https://gist.github.com/aceindy/d43b3a3237194e9846b18e0132de303b

  source_url: https://github.com/helgew/ha-blueprints/blob/main/doorbell_notification/doorbell_notification.yaml

  input:
    binary_sensor:
      name: Doorbell
      description: The doorbell entity (or any binary sensor, really) to trigger the notification
      selector:
        entity:
          domain: binary_sensor
          integration: esphome
    camera:
      name: Camera
      description: The camera which creates the snapshot
      selector:
        entity:
          domain: camera
    notify_device:
      name: Device to notify
      description: The device running the Home Assistant Companion App
      selector:
        device:
          integration: mobile_app
    is_ios:
      name: Is this an iOS device?
      description: Toggle if your selected device runs Android, default is iOS
      selector:
        boolean: {}
      default: true
    notification_title:
      name: Notification title (Optional)
      description: 'Default: "The doorbell was rung!"'
      default: The doorbell was rung!
    notification_message:
      name: Notification message (Optional)
      description: 'Default: "{{ binary_sensor_name }} was activated!"'
      default: '{{ binary_sensor_name }} was activated!'
    delay_start:
      name: Delay (Optional)
      description: Wait before creating camera snapshot
      default: 0.0
      selector:
        number:
          min: 0.0
          max: 60.0
          unit_of_measurement: seconds
          mode: slider
          step: 1.0
    mode:
      name: Mode (Optional)
      description: The mode of the automation (default signal)
      selector:
        select:
          options:
            - single
            - restart
            - queued
            - parallel
          mode: dropdown
      default: single
    throttle_time:
      name: Throttle time (Optional)
      description: Time to wait before the automation can trigger again
      default: 0.0
      selector:
        number:
          min: 0.0
          max: 300.0
          unit_of_measurement: seconds
          mode: slider
          step: 5.0
trigger:
  platform: state
  entity_id: !input 'binary_sensor'
  from: 'off'
  to: 'on'
variables:
  binary_sensor: !input 'binary_sensor'
  binary_sensor_name: '{{ states[binary_sensor].name }}'
  camera: !input 'camera'
  notify_device: !input 'notify_device'
  is_ios: !input 'is_ios'
  notification_title: !input 'notification_title'
  notification_message: !input 'notification_message'
  delay_start: !input 'delay_start'
  throttle_time: !input 'throttle_time'
  snapshot_create_file_path: /config/www/tmp/snapshot_{{ states[camera].object_id
    }}.jpg
  snapshot_access_file_path: '{{ snapshot_create_file_path | replace(''/config/www'',''/local'')
    }}'
mode: !input 'mode'
action:
- delay: '{{ delay_start }}'
- service: camera.snapshot
  entity_id: !input 'camera'
  data:
    filename: '{{ snapshot_create_file_path }}'
- device_id: !input 'notify_device'
  domain: mobile_app
  type: notify
  title: '{{ notification_title }}'
  message: '{{ notification_message }}'
  data: >
    {% set android_data = {
      "image": "%s",
      "clickAction": "/dashboard-cams"
    } | format(snapshot_access_file_path) %}
    {% set ios_data = {
      "attachment": {
        "url": "%s",
        "content_type": "JPEG"
      },
      "clickAction": "/dashboard-cams"
    } | format(snapshot_access_file_path) %}
    {{ ios_data if is_ios else android_data }}
- delay: '{{ throttle_time }}'